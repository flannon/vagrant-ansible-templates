---
- hosts: docker
  become: yes
  gather_facts: true
  remote_user: vagrant

  vars: 
    ntp_manage_config: true
    ntp_timezone: America/New_York
    firewall_state: started
    firewall_enabled_at_boot: true
    firewall_allowed_tcp_ports:
      - "22"
      - "80"
      - "443"
      - "8052"
      - "8080"
    firewall_additional_rules:
      - "iptables -A INPUT -p icmp -m comment --comment '000 accept all icmp' -j ACCEPT"
      - "iptables -A INPUT -i lo -m comment --comment '001 accept all to lo interface' -j ACCEPT"
      - "iptables -A INPUT -m comment --comment '003 accept related established rules' -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT"
      - "iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT"
      - "iptables -A INPUT -p icmp -j ACCEPT"
      - "iptables -A INPUT -i lo -j ACCEPT"
      - "iptables -A OUTPUT -o lo -j ACCEPT"
      - "iptables -A INPUT -m comment --comment '910 deny all other input requests' -j DROP"
    firewall_disable_firewalld: true
    oc_client_tools: openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit
    oc_client_tools_version: v3.11.0
  
  tasks:
    - name: Download openshift client tools
      get_url:
        url: "https://github.com/openshift/origin/releases/download/v3.11.0/{{ oc_client_tools }}.tar.gz"
        dest: "/tmp/{{ oc_client_tools }}.tar.gz"
        checksum: sha256:4b0f07428ba854174c58d2e38287e5402964c9a9355f6c359d1242efd0990da3

    - name: Extract openshift client tools
      unarchive:
        remote_src: True
        src: "/tmp/{{ oc_client_tools }}.tar.gz"
        dest: /tmp
        creates: "/tmp/{{ oc_client_tools }}/oc"

    - name: Install oc
      copy: 
        remote_src: True
        src: "/tmp/{{ oc_client_tools }}/oc"
        dest: /usr/local/bin
        mode: '0755'

    - name: Install kubectl
      copy: 
        remote_src: True
        src: "/tmp/{{ oc_client_tools }}/kubectl"
        dest: /usr/local/bin
        mode: '0755'

  roles:
    - housekeeping
    #- firewall
    - ntp
    #- logrotate
    - docker


### -! workstation
